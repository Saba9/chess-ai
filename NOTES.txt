Dec 31, 2016 (not at 1AM)
- Added additional tests for move generation. Had to fix issues with both fen parsing and the row
  bounds I was passing into AddDeltaRange.
- TODO: Get possible moves loaded for attacks. These should have one entry in both blocked and
  possible moves, currently only have one in blocked moves.

Dec 31, 2016
- Added more tests to chess_state_test.cpp. All in all we now test our initial population of pieces
  on the board, the functionality of ChessState::DeepCopy, and the number of entries in
  possibles_moves and blocked_moves for when pawn, adjacent, and diagonal moves are calculated.
- Added the ability to only calculate certain moves based on which bits were turned on in a char
  passed into CreateMovesForBoard and CreateMovesForPiece. Currently only used for the purpose of
  testing.
- Idea: Store a database of end game situations along with whether they result in a win, loss, or
  tie. Decide that a game has been completed as soon as one of these pre-determined conditions is
  met in order to save computational time.
  - There must be such a database already in existence.

Nov 19, 2016
- Got adjacent move tracking to kinda work when going to the right. Seems like there's something wrong w/ sliding
  - Fixed the issue. We were incrementing index instead of delta and also checking board[index] instead of board[index + deltaTotal]

June 16, 2016
- Fixed issue mentioned one June 12th (2nd bullet) by modifying the ChessState object instead of doing a shallow copy.
- TODO: Should cleanup includes...

June 12, 2016
- DeepCopy seems to be working. For some reason it looks like the reason why setting the tracker to nullptr would'nt set the possible_moves tracker to nullptr is because the possible_moves nullptr was pointing to another shared pointer. Not sure why. Should figure this out. Using deep copy inside of GetNewState fixes this.
- Oh... The issue is (I believe) that when we shallow copy a ChessState, copies of the shared_pointers in trackers are made that aren't linked to the pointers in the copied possible_moves and blocked_moves. So, we need to nullify the shared_pointer stored in the trackers array of the ChessState we copied from in order to effect the copied possible_moves and blocked_moves.

May 21, 2016
- Fixed issue with the call to RecalculateMoves w/ a value of -88. Was pushing address of a pointer to a shared pointer which was promptly destroyed after exiting the function's scope. Now pushing address of pointer to tracker stored in trackers[] instead.
 
May 15, 2016
- Fixed memory issues (I think). Mostly used valgrind to identify issues. Solved with smart_pointers (C++11). Remember copies of GameState are shallow.
- Need to implement deep copy later. (After weird index stuff is fixed).
- For some reason RecalculateMoves is called with index of -88. Probably some weird memory crap. IDK. gdb might help.
- Should probably change ownership implementation do differentiate between squares with no pieces and those with.
